[{"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\reportWebVitals.js":"2","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\App.js":"3","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\RouterComponent\\RouterComponent.jsx":"4","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Main\\Main.jsx":"5","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Footer\\Footer.jsx":"6","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Header\\Header.jsx":"7","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\assets\\Icons.jsx":"8","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\redux\\authReducer.js":"9","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\redux\\redux-store.js":"10","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\InputComponent\\InputComponent.jsx":"11","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\ProfileRouter\\ProfileRouter.jsx":"12","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\ProfileRouter\\Profile\\Profile.jsx":"13","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Slider\\Slider.jsx":"14","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\ProfileRouter\\ProfileFavourites\\ProfileFavourites.jsx":"15","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Item\\ItemPage.jsx":"16","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\SignInWarning\\SignInWarning.jsx":"17","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Cart\\CartPage.jsx":"18","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Authorization\\Authentication.jsx":"19","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Authorization\\Registration.jsx":"20","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Authorization\\Login.jsx":"21","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\GRAPHQL\\auth.js":"22","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\GRAPHQL\\items.js":"23","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\ItemList\\ItemListRouter.jsx":"24","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\ItemList\\ItemList.jsx":"25","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\GRAPHQL\\cart.js":"26","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Header\\ProfileNav\\ProfileNav.jsx":"27","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Header\\ProfileNav\\UserInfo.jsx":"28","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\AdminPage\\AdminPage.jsx":"29","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\GRAPHQL\\admin.js":"30","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Paginator\\Paginator.jsx":"31"},{"size":1427,"mtime":1613120330093,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":1058,"mtime":1613412881993,"results":"35","hashOfConfig":"33"},{"size":1490,"mtime":1613384572412,"results":"36","hashOfConfig":"33"},{"size":1459,"mtime":1612693145032,"results":"37","hashOfConfig":"33"},{"size":680,"mtime":1612788126463,"results":"38","hashOfConfig":"33"},{"size":2167,"mtime":1613466984074,"results":"39","hashOfConfig":"33"},{"size":6775,"mtime":1612980859284,"results":"40","hashOfConfig":"33"},{"size":1006,"mtime":1613475447563,"results":"41","hashOfConfig":"33"},{"size":234,"mtime":1612978516939,"results":"42","hashOfConfig":"33"},{"size":692,"mtime":1608487047256,"results":"43","hashOfConfig":"33"},{"size":1288,"mtime":1613382417013,"results":"44","hashOfConfig":"33"},{"size":6602,"mtime":1613233605133,"results":"45","hashOfConfig":"33"},{"size":3866,"mtime":1609573990351,"results":"46","hashOfConfig":"33"},{"size":3088,"mtime":1612979722782,"results":"47","hashOfConfig":"33"},{"size":9054,"mtime":1613472052541,"results":"48","hashOfConfig":"33"},{"size":1036,"mtime":1612979128212,"results":"49","hashOfConfig":"33"},{"size":6375,"mtime":1613466769962,"results":"50","hashOfConfig":"33"},{"size":1909,"mtime":1613464780088,"results":"51","hashOfConfig":"33"},{"size":3967,"mtime":1613464149978,"results":"52","hashOfConfig":"33"},{"size":2411,"mtime":1613121190107,"results":"53","hashOfConfig":"33"},{"size":1360,"mtime":1613464385589,"results":"54","hashOfConfig":"33"},{"size":1742,"mtime":1613587440440,"results":"55","hashOfConfig":"33"},{"size":8921,"mtime":1613588863453,"results":"56","hashOfConfig":"33"},{"size":3768,"mtime":1613588585573,"results":"57","hashOfConfig":"33"},{"size":830,"mtime":1613157896195,"results":"58","hashOfConfig":"33"},{"size":1293,"mtime":1612982468686,"results":"59","hashOfConfig":"33"},{"size":1733,"mtime":1613464769145,"results":"60","hashOfConfig":"33"},{"size":675,"mtime":1613248801592,"results":"61","hashOfConfig":"33"},{"size":813,"mtime":1613121509150,"results":"62","hashOfConfig":"33"},{"size":1855,"mtime":1613589529013,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"10febh",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\index.js",[],["138","139"],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\App.js",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\RouterComponent\\RouterComponent.jsx",["140"],"import React from 'react'\r\nimport { Link, Redirect, Route, Switch } from 'react-router-dom'\r\nimport CartPage from '../Cart/CartPage'\r\nimport ItemListRouter from '../ItemList/ItemListRouter'\r\nimport ItemPage from '../Item/ItemPage'\r\nimport Main from '../Main/Main'\r\nimport ProfileRouter from '../ProfileRouter/ProfileRouter'\r\nimport s from './RouterComponent.module.css'\r\nimport Header from '../Header/Header'\r\nimport Footer from '../Footer/Footer'\r\n\r\nconst RouterComponent = ({isInitialized}) => {\r\n\r\n    return (\r\n        <>\r\n        <Header />\r\n            <div className={s.router}>\r\n                {isInitialized ? \r\n                    <>\r\n                        \r\n                        <Switch>\r\n                            <Route path='/profile' render={() => <ProfileRouter />} />\r\n                            <Route path='/items' exact render={(props) => <ItemListRouter search = {props.location.search} />} />\r\n                            <Route path='/item/:id' exact render={(match) => <ItemPage id = {match.match.params.id} />} />\r\n                            <Route path='/cart' exact render={() => <CartPage />} />\r\n                            <Route path='/' exact render={() => <Main />} />\r\n                            <Redirect to='/404' />\r\n                        </Switch>\r\n                    </> :\r\n                    <div>Loading... APP</div>\r\n                }\r\n            </div>\r\n        <Footer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default RouterComponent","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Main\\Main.jsx",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Header\\Header.jsx",["141","142","143","144","145"],"import React, { useEffect, useState } from 'react'\r\nimport { CartIcon, GlobeIcon, UserIcon } from '../../assets/Icons'\r\nimport s from './Header.module.css'\r\nimport Authentication from '../Authorization/Authentication'\r\nimport { connect } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport SignInWarning from '../SignInWarning/SignInWarning'\r\nimport ProfileNav from './ProfileNav/ProfileNav'\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_USER_CART_QTY } from '../../GRAPHQL/auth'\r\n\r\nconst Header = function({isAuth}){\r\n    let [isLangWindow, setLangWindow] = useState(0)\r\n\r\n    const [isCartAndNotAuth, setIsCartAndNotAuth] = useState(false)\r\n\r\n    const {data: cartQty, loading} = useQuery(GET_USER_CART_QTY)\r\n\r\n    let history = useHistory()\r\n\r\n    const handleCartButton = () => {\r\n\r\n        if(isAuth){\r\n            history.push('/cart')\r\n        }else{\r\n            setIsCartAndNotAuth(true)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SignInWarning\r\n                state={isCartAndNotAuth}\r\n                setState={setIsCartAndNotAuth}\r\n                text={'access the Cart!'}\r\n            />\r\n            <header className={s.header__wrapper}>\r\n\r\n                <div className={s.header}>\r\n                    <Link to='/' className={s.header__header}>Lemon.kz</Link>\r\n                    <div className={s.header__right}>\r\n                        <button onClick={()=>setLangWindow(true)}><GlobeIcon /></button>\r\n                        <button className={s.header__cart} onClick={handleCartButton}>\r\n                            <CartIcon />\r\n                            {cartQty && cartQty.user && cartQty.user.cartQty ? \r\n                                <div className={s.header__cart__length}>{cartQty.user.cartQty}</div> \r\n                                : null}\r\n                        </button>\r\n                        <ProfileNav />\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst mStP = (state) => ({\r\n\r\n    isAuth: state.auth.isAuth,\r\n    cartQty: state.auth.profile.cartQty\r\n\r\n})\r\n\r\nexport default connect(mStP, {})(Header)","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\assets\\Icons.jsx",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\redux\\authReducer.js",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\redux\\redux-store.js",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\InputComponent\\InputComponent.jsx",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\ProfileRouter\\ProfileRouter.jsx",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\ProfileRouter\\Profile\\Profile.jsx",["146"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport s from './Profile.module.css'\r\nimport ProfilePhoto from './../../../assets/profilePhoto.png'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport InputComponent from '../../InputComponent/InputComponent';\r\nimport { editProfileThunk, setAuth } from '../../../redux/authReducer'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_USER } from '../../../GRAPHQL/auth'\r\n\r\nconst Profile = ({ profile, isAuth, editProfileThunk, setAuth, ...props }) => {\r\n\r\n    let history = useHistory()\r\n\r\n    if(!isAuth){\r\n        history.push('/404')\r\n    }\r\n\r\n    const [updateUser] = useMutation(UPDATE_USER, {\r\n        onCompleted: data=>{\r\n            if(data?.updateUser.user){\r\n                setAuth(data.updateUser.user, 1)\r\n            }\r\n        },\r\n        onError: err=>{\r\n            debugger\r\n            console.log(err.message)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <h2 className={s.profile__header}>My Account</h2>\r\n            <div className={s.profile__info}>\r\n                <div className={s.profile__photo}><img src={ProfilePhoto} alt=\"Profile\" /></div>\r\n                <div>\r\n                    <div className={s.profile__name}>{profile.firstName} {profile.lastName}</div>\r\n                    <div>Username: {profile.username}</div>\r\n                    {profile.isStaff &&\r\n                        <div>\r\n                            Role: Admin\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <Formik\r\n                initialValues={{\r\n                    firstName: profile.firstName,\r\n                    lastName: profile.lastName,\r\n                    phoneNumber: profile.phoneNumber,\r\n                    sex: profile.sex\r\n                }}\r\n                validate={values => {\r\n                    const errors = {};\r\n                    if (!values.firstName) {\r\n                        errors.firstName = 'Required';\r\n                    }\r\n                    if (!values.lastName) {\r\n                        errors.lastName = 'Required';\r\n                    }\r\n                    // if (!values.sex) {\r\n                    //     errors.sex = 'Required';\r\n                    // }\r\n                    return errors;\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    debugger\r\n                    setSubmitting(true);\r\n                    updateUser({variables: {...values, phoneNumber: values.phoneNumber.toString()}})\r\n                    setSubmitting(false);\r\n                }}\r\n\r\n            >\r\n                {({ isSubmitting, values, errors, touched }) => (\r\n                    <Form className={s.profile__form}>\r\n                        <div className={s.profile__nameForm}>\r\n                            <div className={s.profile__nameForm__header} >\r\n                                <p>First Name</p>\r\n                                <Field \r\n                                    name='firstName' \r\n                                    type='text' \r\n                                    placeholder='First Name' \r\n                                    component={InputComponent} \r\n                                />\r\n                            </div>\r\n                            <div className={s.profile__nameForm__header} >\r\n                                <p>Last Name</p>\r\n                                <Field \r\n                                    name='lastName' \r\n                                    type='text' \r\n                                    placeholder='Last Name'\r\n                                    component={InputComponent} \r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.profile__nameForm__header}>\r\n                            <Field \r\n                                name='phoneNumber' \r\n                                type='number' \r\n                                placeholder='Phone Number'\r\n                                component={InputComponent} \r\n                            />\r\n                        </div>\r\n                        <div className={s.profile__radioWrapper__parent}>\r\n                            <div className={s.profile__radioWrapper}>\r\n                                <span \r\n                                    className={touched.sex && errors.sex ? \r\n                                        s.profile__radioFiller + ' ' + s.profile__radioFiller_error : \r\n                                        s.profile__radioFiller}\r\n                                > </span>\r\n                                <Field\r\n                                    id='m'\r\n                                    className={s.profile__radio}\r\n                                    type=\"radio\"\r\n                                    name=\"sex\"\r\n                                    value=\"m\"\r\n                                    checked={values.sex === 'm'}\r\n                                />\r\n                                <label \r\n                                    className={s.profile__radioLabel + ' ' + s.profile__radioLabel_first} \r\n                                    htmlFor='m'\r\n                                >\r\n                                    Men\r\n                                </label>\r\n                                <Field\r\n                                    id='w'\r\n                                    className={s.profile__radio}\r\n                                    type=\"radio\"\r\n                                    name=\"sex\"\r\n                                    value=\"w\"\r\n                                    checked={values.sex === 'w'}\r\n                                />\r\n                                <label className={s.profile__radioLabel} htmlFor='w'>\r\n                                    Women\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.profile__button}>\r\n                            <button className={s.profile__buttonButton} type=\"submit\">Save</button>\r\n                            <span className={s.profile__buttonFiller}></span>\r\n                        </div>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst mStP = (state) => ({\r\n\r\n    isAuth: state.auth.isAuth,\r\n    profile: state.auth.profile\r\n\r\n})\r\n\r\nexport default connect(mStP, { setAuth })(Profile)","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Slider\\Slider.jsx",["147"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Down } from '../../assets/Icons'\r\nimport s from './Slider.module.css'\r\n\r\nconst SliderElem = ({\r\n    img, imgAlt, imgClassName,\r\n    header, headerClassName,\r\n    desc, descClassName,\r\n    to\r\n    }) => {\r\n\r\n    return(\r\n\r\n        <Link to={to} className={s.sliderElem}>\r\n            <div className ={s.sliderElem__wrapper}>\r\n                {header && <h2 className={s.sliderElem__header + ' ' + headerClassName}>{header}</h2>}\r\n                {img && <img className={s.sliderElem__img + ' ' + imgClassName} src={img} alt={imgAlt ? imgAlt : ''} />}\r\n                {desc && <div className={s.sliderElem__desc + ' ' + descClassName}>{desc}</div>}\r\n            </div>\r\n        </Link>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst SliderContainer = ({objects, className, period, afterClickPeriod}) => {\r\n\r\n    let [currEl, setCurrEl] = useState(0)\r\n\r\n    let [isTouched, setIsTouched] = useState(false)\r\n\r\n    let [intervalId, setIntervalId] = useState()\r\n\r\n    let periodRef = useRef();\r\n\r\n    periodRef.current = period\r\n\r\n    useEffect(()=>{\r\n\r\n        if(!isTouched){\r\n            // debugger\r\n            setIntervalId(setInterval(() => {\r\n                setNext()\r\n            }, periodRef.current * 1000))\r\n        }else{\r\n            // debugger\r\n            clearInterval(intervalId)\r\n            setTimeout(()=>{\r\n                setIsTouched(false)\r\n            }, afterClickPeriod * 1000)\r\n        }\r\n\r\n    }, [isTouched])\r\n\r\n    const setPrev = () => {\r\n\r\n        setCurrEl(currEl => {\r\n            if(currEl === 0){\r\n                return objects.length - 1\r\n            }else{\r\n                return currEl - 1\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const setNext = () => {\r\n\r\n        // debugger\r\n        setCurrEl(currEl => {\r\n            if(currEl === objects.length - 1){\r\n                return 0\r\n            }else{\r\n                return currEl + 1\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.slider__wrapper + ' ' + className}>\r\n            <div className={s.slider}>\r\n                <button \r\n                    className={s.slider__arrowWrappers + ' ' + s.slider__left} \r\n                    onClick={\r\n                        ()=>{\r\n                            setIsTouched(true)\r\n                            setPrev()\r\n                        }}>\r\n                    <span className={s.slider__arrows + ' ' + s.slider__left}>\r\n                        <Down />\r\n                    </span>\r\n                </button>\r\n                <button \r\n                    className={s.slider__arrowWrappers + ' ' + s.slider__right} \r\n                    onClick={\r\n                        ()=>{\r\n                            setIsTouched(true)\r\n                            setNext()\r\n                        }}>\r\n                    <span className={s.slider__arrows + ' ' + s.slider__right}>\r\n                        <Down />\r\n                    </span>\r\n                </button>\r\n                <div className={s.slider__bottomNav}>\r\n                    {objects.map((el, index)=>{\r\n                        return(\r\n                            <button\r\n                                key={el.to}\r\n                                onClick={()=>{\r\n                                    setCurrEl(index)\r\n                                    setIsTouched(true)\r\n                                }} \r\n                                className={index===currEl ? s.slider__bottomNav__button+ ' ' + s.active :\r\n                                s.slider__bottomNav__button}\r\n                            ></button>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <SliderElem {...objects[currEl]} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SliderContainer","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\ProfileRouter\\ProfileFavourites\\ProfileFavourites.jsx",["148"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport s from './ProfileFavourites.module.css'\r\nimport { HeartIconFilled } from '../../../assets/Icons'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { GET_FAV_ITEMS, TOGGLE_FAV } from '../../../GRAPHQL/items'\r\n\r\nconst ProfileFavourites = ({ isAuth }) => {\r\n\r\n    const {data, loading, refetch} = useQuery(GET_FAV_ITEMS)\r\n\r\n    const [toggleFavourite] = useMutation(TOGGLE_FAV, {\r\n        onCompleted: data=>{\r\n            if(data?.toggleFav.success){\r\n                refetch()\r\n            }\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(isAuth){\r\n            refetch()\r\n        }\r\n    }, [isAuth])\r\n\r\n    return (\r\n        <>\r\n            {!isAuth && <Redirect to='/' />}\r\n            <h2 className={s.profile__header}>My Favourites</h2>\r\n            <div className={s.favourites}>\r\n                {loading ? <div>Loading</div> :\r\n                <>\r\n                    {data?.user.favouriteItems.length ? data?.user.favouriteItems.map((el)=>{\r\n                        return(\r\n                            <div key={el.id} className={s.favourite__wrapper}>\r\n                                <button onClick={()=>{\r\n                                    toggleFavourite({variables: {id: el.id}})\r\n                                }} className={s.favourite__heart}><HeartIconFilled /></button>\r\n                                <div className={s.favourite}>\r\n                                    <Link \r\n                                        to={'/item/'+el.id} \r\n                                        className={s.favourite__img}\r\n                                    >\r\n                                        <img src={el.thumbnail} alt='favourites' />\r\n                                    </Link>\r\n                                    <div className={s.favourite__right}>\r\n                                        <Link \r\n                                            to={'/item/'+el.id} \r\n                                            className={s.favourite__title}\r\n                                        >\r\n                                            {el.brand.name} {el.name}\r\n                                        </Link>\r\n                                        <Link \r\n                                            to={'/item/'+el.id} \r\n                                            className={s.favourite__desc}\r\n                                        >\r\n                                            {el.description}\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }):\r\n                    <div>Empty :((((((((((((((((((((((((((((((((((((((</div>}\r\n                </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst mStP = (state) => ({\r\n\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\nexport default connect(mStP, {})(ProfileFavourites)","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Item\\ItemPage.jsx",["149","150"],"import { useMutation, useQuery } from '@apollo/client';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { HeartIcon, HeartIconFilled, MinusIcon, PlusIcon } from '../../assets/Icons';\r\nimport { ADD_TO_CART, GET_CART_ITEMS } from '../../GRAPHQL/cart';\r\nimport { GET_FAV_ITEMS, GET_SINGLE_ITEM, TOGGLE_FAV } from '../../GRAPHQL/items';\r\nimport SignInWarning from '../SignInWarning/SignInWarning';\r\nimport s from './ItemPage.module.css'\r\n\r\nconst ItemPage = ({ id, isAuth }) => {\r\n\r\n    const [quantity, setQuantity] = useState(1)\r\n\r\n    const {data, loading, refetch} = useQuery(GET_SINGLE_ITEM, {\r\n        variables: {id: id},\r\n        onCompleted: data=>{\r\n            debugger\r\n            if(data.singleItem.qty>1){\r\n                setQuantity(data.singleItem.qty)\r\n            }\r\n        },\r\n        onError: err=>{\r\n            debugger\r\n            console.log(err.message)\r\n        }\r\n    })\r\n\r\n    const [toggleFavourite] = useMutation(TOGGLE_FAV, {\r\n        variables: {id},\r\n        onCompleted: data=>{\r\n            if(data?.toggleFav.success){\r\n                refetch()\r\n            }\r\n        },\r\n        refetchQueries: [{query: GET_FAV_ITEMS}]\r\n    })\r\n\r\n    const [addToCart, {loading: buttonIsFetching}] = useMutation(ADD_TO_CART, {\r\n        refetchQueries: [{query: GET_CART_ITEMS}],\r\n        awaitRefetchQueries: true,\r\n        update(cache, {data}){\r\n            if(!data?.mutateCart.error){\r\n                let data = cache.readQuery({query: GET_SINGLE_ITEM, variables: {id: id}})\r\n                if(data && data.singleItem){\r\n                    cache.writeQuery({\r\n                        query: GET_SINGLE_ITEM, \r\n                        variables: {id: id}, \r\n                        data: {\r\n                            ...data,\r\n                            singleItem: {\r\n                                ...data.singleItem,\r\n                                qty: quantity\r\n                            }\r\n                        }})\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    const [isLikeClickedAndNotAuth, setIsLikeClickedAndNotAuth] = useState(false)\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    useEffect(()=>{\r\n        refetch()\r\n    }, [isAuth])\r\n\r\n    const handleFavouriteButton = () => {\r\n        if (isAuth) {\r\n            toggleFavourite()\r\n        } else {\r\n            setText('Add Items to Favourite!')\r\n            setIsLikeClickedAndNotAuth(true)\r\n        }\r\n    }\r\n\r\n    const handleAddCartItem = (id, qty) => {\r\n        if (isAuth) {\r\n            addToCart({variables: {id, qty}})\r\n        } else {\r\n            setText('Add Items to Cart!')\r\n            setIsLikeClickedAndNotAuth(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading ? <div>Loading...</div> :\r\n                <>\r\n                    <SignInWarning\r\n                        state={isLikeClickedAndNotAuth}\r\n                        setState={setIsLikeClickedAndNotAuth}\r\n                        text={text}\r\n                    />\r\n                    <div className={s.item__wrapper}>\r\n                        <div className={s.item__category}>\r\n                            <Link to={'/items'}>Items</Link> / \r\n                            <Link to={'/items?category=' + data.singleItem.category.name}>\r\n                                {data.singleItem.category.name}\r\n                            </Link> / {id}\r\n                        </div>\r\n                        <div className={s.item__header}>\r\n                            <h2 className={s.item__title}>{data.singleItem.brand.name} {data.singleItem.name}</h2>\r\n                        </div>\r\n                        <div className={s.item}>\r\n                            <div>\r\n                                <div className={s.item__image}>\r\n                                    {data.singleItem.thumbnail ?\r\n                                    <img \r\n                                        src={data.singleItem.thumbnail} \r\n                                        alt={data.singleItem.brand.name+' '+data.singleItem.name}/>\r\n                                    :\r\n                                    <div>No photo available</div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className={s.item__right}>\r\n                                <div className={s.item__price__wrapper}>\r\n                                    <div className={s.item__price}>${data.singleItem.price.toFixed(2)}</div>\r\n                                    <div className={s.item__overall__price__wrapper}>\r\n                                        Overall Price:\r\n                                        <div className={s.item__overall__price}>\r\n                                            ${(data.singleItem.price * quantity).toFixed(2)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={s.item__quantity__wrapper}>\r\n                                    Quantity\r\n                                    <div className={s.item__quantity}>\r\n                                        <button onClick={() => setQuantity(count => {\r\n                                            if (count > 1) {\r\n                                                return count - 1\r\n                                            } else {\r\n                                                return count\r\n                                            }\r\n                                        })}><MinusIcon /></button>\r\n                                        <div>{quantity}</div>\r\n                                        <button onClick={() => setQuantity(count => {\r\n                                            if (count >= 10) {\r\n                                                return count\r\n                                            } else {\r\n                                                return count + 1\r\n                                            }\r\n                                        })}><PlusIcon /></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={s.item__buttons}>\r\n                                {data.singleItem.qty>0 ? \r\n                                    <button \r\n                                        className={s.item__card + ' ' + s.item__card_disabled} \r\n                                        disabled\r\n                                    >\r\n                                        Item Already in Cart\r\n                                    </button>:\r\n                                    <button \r\n                                        className={s.item__card} \r\n                                        onClick={()=>{handleAddCartItem(data.singleItem.id, quantity)}}\r\n                                    >\r\n                                        Add To Card\r\n                                    </button>    }\r\n                                    \r\n                                    <button onClick={() => handleFavouriteButton()} className={s.item__favourite}>\r\n                                        {!data.singleItem.isFavourite || !isAuth ?\r\n                                            <><HeartIcon />Add To Favourite</> :\r\n                                            <><HeartIconFilled />Remove From Favourites</>}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.item__desc}>\r\n                            <p>Description</p>\r\n                            {data.singleItem.description}\r\n                        </div>\r\n                        <div className={s.item__desc}>\r\n                            <p>Reviews</p>\r\n                            {data.singleItem.reviewSet.length? \r\n                                <div>\r\n                                    {data.singleItem.reviewSet.map((el)=>{\r\n                                        return(\r\n                                            <div>\r\n                                                <p>{el.author.username}</p>\r\n                                                <div>{el.star} Stars</div>\r\n                                                <div>{el.text}</div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            :\r\n                                <div>No Reviews</div>\r\n                            }\r\n                        </div>\r\n                        {data.singleItem.review}\r\n                    </div>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nlet mStP = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mStP, {})(ItemPage)","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\SignInWarning\\SignInWarning.jsx",["151"],"import React, { useEffect, useState } from 'react'\r\nimport { CloseIcon } from '../../assets/Icons'\r\nimport s from './SignInWarning.module.css'\r\n\r\nconst SignInWarning = ({state, setState, text}) => {\r\n\r\n    let [timeoutID, setTimeoutID] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        if(state){\r\n            setTimeoutID(setTimeout(()=>{\r\n                setState(bool=>{\r\n                    if(bool){\r\n                        return false\r\n                    }\r\n                })\r\n            }, 3000))\r\n        }\r\n    }, [state])\r\n\r\n    return (\r\n        <>\r\n        {state && \r\n            <div className={s.auth_warning}>\r\n                <button \r\n                    onClick={()=>{\r\n                        clearTimeout(timeoutID)\r\n                        setState(false)\r\n                    }} \r\n                    className={s.auth_warning__close}><CloseIcon />\r\n                </button>\r\n                <div>Sign In to {text}</div>\r\n            </div>\r\n        }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SignInWarning","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Cart\\CartPage.jsx",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Authorization\\Authentication.jsx",["152"],"import React, { useEffect } from 'react';\r\nimport Login from './Login';\r\nimport Registration from './Registration';\r\nimport { setAuth } from '../../redux/authReducer';\r\nimport s from './Authentication.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { useMutation } from '@apollo/client';\r\nimport {client} from '../../index';\r\nimport { LOGIN } from '../../GRAPHQL/auth';\r\n\r\n\r\n\r\nconst Authorization = ({ setLogin, isLogin, setAuth, isAuth, ...props }) => {\r\n\r\n    const [login, { loading, error }] = useMutation(LOGIN, {\r\n        onCompleted: data=>{\r\n            if(data?.tokenAuth){\r\n                localStorage.setItem(\"token\", data.tokenAuth.token)\r\n                setAuth(data.tokenAuth.user, 1)\r\n                closeAuth(0, 'unset')\r\n                debugger\r\n                client.clearStore().then(()=>client.resetStore())\r\n            }\r\n        }\r\n    })\r\n\r\n    const closeAuth = (num, string) => {\r\n\r\n        document.body.style.overflow = string;\r\n        setLogin(num);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuth) {\r\n            closeAuth(0, 'unset')\r\n        }\r\n\r\n    }, [isAuth])\r\n\r\n    return (\r\n\r\n        <div className={s.authentication}>\r\n\r\n            {isLogin === 1 ?\r\n\r\n                <Login\r\n                    closeAuth={closeAuth}\r\n                    setAuth={setAuth}\r\n                    login = {login}\r\n                    loading = {loading}\r\n                    error = {error}\r\n                /> :\r\n                <Registration\r\n                    closeAuth={closeAuth}\r\n                    error={props.error}\r\n                    setAuth={setAuth}\r\n                    login = {login}\r\n                />\r\n\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mStP = (state) => {\r\n\r\n    return {\r\n\r\n        error: state.auth.error,\r\n        isAuth: state.auth.isAuth\r\n\r\n    }\r\n\r\n}\r\nexport default connect(mStP, { setAuth })(Authorization);","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Authorization\\Registration.jsx",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Authorization\\Login.jsx",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\GRAPHQL\\auth.js",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\GRAPHQL\\items.js",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\ItemList\\ItemListRouter.jsx",["153"],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\ItemList\\ItemList.jsx",["154"],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\GRAPHQL\\cart.js",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Header\\ProfileNav\\ProfileNav.jsx",["155"],"import React, { useState } from 'react';\r\nimport { HamburgerIcon, UserIcon } from '../../../assets/Icons';\r\nimport s from './ProfileNav.module.css'\r\nimport UserInfo from './UserInfo.jsx';\r\nimport onClickOutside from 'react-onclickoutside'\r\nimport Authentication from '../../Authorization/Authentication';\r\n\r\nconst ProfileNav = function(){\r\n    \r\n    let [profileNav, setProfileNav] = useState(false);\r\n\r\n    let [isLogin, setLogin] = useState(0);\r\n\r\n    ProfileNav.handleClickOutside = ()=>{setProfileNav(false)};\r\n\r\n    return (\r\n        <>\r\n            <div className={s.profileNav}>\r\n                <button className={s.profileNav__button} onClick={() => setProfileNav(!profileNav)}>\r\n                    <UserIcon />\r\n                </button>\r\n                {profileNav && \r\n                    <UserInfo \r\n                        profileNav={profileNav} \r\n                        setProfileNav={setProfileNav} \r\n                        setLogin={setLogin}\r\n                    /> }\r\n                {isLogin!==0 && <Authentication setLogin={setLogin} isLogin={isLogin} />}\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst clickOutsideConfig = {\r\n\r\n    handleClickOutside: () => ProfileNav.handleClickOutside,\r\n\r\n}\r\n\r\nexport default onClickOutside(ProfileNav, clickOutsideConfig);","C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Header\\ProfileNav\\UserInfo.jsx",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\AdminPage\\AdminPage.jsx",["156","157"],"import { useQuery } from '@apollo/client'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GET_ITEMS_ADMIN } from '../../GRAPHQL/admin'\r\n\r\nconst AdminPage = ({profile, isInitialized, match}) => {\r\n\r\n    const {} = useQuery(GET_ITEMS_ADMIN, {})\r\n\r\n    return (\r\n    <>\r\n        {isInitialized?\r\n        <div>\r\n            <h2>Admin Page</h2>\r\n            <div>\r\n                \r\n            </div>\r\n        </div>\r\n        :\r\n        <div>Loading...</div>\r\n        }\r\n    </>\r\n    )\r\n\r\n}\r\n\r\nconst mStP = (state) => ({\r\n    profile: state.auth.profile\r\n})\r\n\r\nexport default connect(mStP, {})(AdminPage)",["158","159"],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\GRAPHQL\\admin.js",[],"C:\\Users\\DELL\\Desktop\\react_projects\\06_mvp_lemon\\mvp_lemon\\src\\components\\Paginator\\Paginator.jsx",["160"],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"170","line":2,"column":31,"nodeType":"167","messageId":"168","endLine":2,"endColumn":39},{"ruleId":"165","severity":1,"message":"171","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":22},{"ruleId":"165","severity":1,"message":"172","line":13,"column":10,"nodeType":"167","messageId":"168","endLine":13,"endColumn":22},{"ruleId":"165","severity":1,"message":"173","line":17,"column":27,"nodeType":"167","messageId":"168","endLine":17,"endColumn":34},{"ruleId":"165","severity":1,"message":"174","line":8,"column":10,"nodeType":"167","messageId":"168","endLine":8,"endColumn":26},{"ruleId":"175","severity":1,"message":"176","line":54,"column":8,"nodeType":"177","endLine":54,"endColumn":19,"suggestions":"178"},{"ruleId":"175","severity":1,"message":"179","line":25,"column":8,"nodeType":"177","endLine":25,"endColumn":16,"suggestions":"180"},{"ruleId":"165","severity":1,"message":"181","line":39,"column":33,"nodeType":"167","messageId":"168","endLine":39,"endColumn":49},{"ruleId":"175","severity":1,"message":"179","line":67,"column":8,"nodeType":"177","endLine":67,"endColumn":16,"suggestions":"182"},{"ruleId":"175","severity":1,"message":"183","line":19,"column":8,"nodeType":"177","endLine":19,"endColumn":15,"suggestions":"184"},{"ruleId":"175","severity":1,"message":"185","line":40,"column":8,"nodeType":"177","endLine":40,"endColumn":16,"suggestions":"186"},{"ruleId":"175","severity":1,"message":"187","line":21,"column":8,"nodeType":"177","endLine":21,"endColumn":20,"suggestions":"188"},{"ruleId":"175","severity":1,"message":"179","line":36,"column":8,"nodeType":"177","endLine":36,"endColumn":16,"suggestions":"189"},{"ruleId":"165","severity":1,"message":"190","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":23},{"ruleId":"165","severity":1,"message":"191","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":20},{"ruleId":"192","severity":1,"message":"193","line":9,"column":11,"nodeType":"194","messageId":"195","endLine":9,"endColumn":13},{"ruleId":"161","replacedBy":"196"},{"ruleId":"163","replacedBy":"197"},{"ruleId":"165","severity":1,"message":"198","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'UserIcon' is defined but never used.","'Authentication' is defined but never used.","'isLangWindow' is assigned a value but never used.","'loading' is assigned a value but never used.","'editProfileThunk' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'afterClickPeriod', 'intervalId', and 'setNext'. Either include them or remove the dependency array.","ArrayExpression",["201"],"React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["202"],"'buttonIsFetching' is assigned a value but never used.",["203"],"React Hook useEffect has a missing dependency: 'setState'. Either include it or remove the dependency array. If 'setState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["204"],"React Hook useEffect has a missing dependency: 'closeAuth'. Either include it or remove the dependency array.",["205"],"React Hook useEffect has missing dependencies: 'history' and 'query'. Either include them or remove the dependency array.",["206"],["207"],"'HamburgerIcon' is defined but never used.","'useHistory' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["199"],["200"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"210","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"210","fix":"219"},"Update the dependencies array to be: [afterClickPeriod, intervalId, isTouched, setNext]",{"range":"220","text":"221"},"Update the dependencies array to be: [isAuth, refetch]",{"range":"222","text":"223"},{"range":"224","text":"223"},"Update the dependencies array to be: [setState, state]",{"range":"225","text":"226"},"Update the dependencies array to be: [closeAuth, isAuth]",{"range":"227","text":"228"},"Update the dependencies array to be: [history, query, query.page]",{"range":"229","text":"230"},{"range":"231","text":"223"},[1510,1521],"[afterClickPeriod, intervalId, isTouched, setNext]",[749,757],"[isAuth, refetch]",[2286,2294],[527,534],"[setState, state]",[1112,1120],"[closeAuth, isAuth]",[589,601],"[history, query, query.page]",[1098,1106]]